function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { mode } from "@chakra-ui/theme-tools";
import Input from "./input";
var {
  sizes,
  defaultProps,
  variants
} = Input;
var parts = ["field", "icon"];

function baseStyleField(props) {
  return _extends({}, Input.baseStyle.field, {
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    "> option": {
      bg: mode("white", "gray.700")(props)
    }
  });
}

var baseStyleInput = {
  color: "currentColor",
  fontSize: "1.25rem",
  _disabled: {
    opacity: 0.5
  }
};

var baseStyle = props => ({
  field: baseStyleField(props),
  icon: baseStyleInput
});

export default {
  parts,
  baseStyle,
  sizes,
  variants,
  defaultProps
};
//# sourceMappingURL=select.js.map