/// <reference path="../@styled-system/core.d.ts" />
import * as CSS from "csstype";
import { Length, ResponsiveValue } from "../utils";
/**
 * Types for layout related CSS properties
 */
export interface LayoutProps {
    /**
     * The CSS `display` property
     */
    display?: ResponsiveValue<CSS.Property.Display>;
    /**
     * The CSS `display` property
     */
    d?: ResponsiveValue<CSS.Property.Display>;
    /**
     * The CSS `width` property
     */
    width?: ResponsiveValue<CSS.Property.Width<Length>>;
    /**
     * The CSS `width` property
     */
    w?: ResponsiveValue<CSS.Property.Width<Length>>;
    /**
     * The CSS `width` and `height` property
     */
    boxSize?: ResponsiveValue<CSS.Property.Width<Length>>;
    /**
     * The CSS `max-width` property
     */
    maxWidth?: ResponsiveValue<CSS.Property.MaxWidth<Length>>;
    /**
     * The CSS `max-width` property
     */
    maxW?: ResponsiveValue<CSS.Property.MaxWidth<Length>>;
    /**
     * The CSS `min-width` property
     */
    minWidth?: ResponsiveValue<CSS.Property.MinWidth<Length>>;
    /**
     * The CSS `min-width` property
     */
    minW?: ResponsiveValue<CSS.Property.MinWidth<Length>>;
    /**
     * The CSS `height` property
     */
    height?: ResponsiveValue<CSS.Property.Height<Length>>;
    /**
     * The CSS `height` property
     */
    h?: ResponsiveValue<CSS.Property.Height<Length>>;
    /**
     * The CSS `max-height` property
     */
    maxHeight?: ResponsiveValue<CSS.Property.MaxHeight<Length>>;
    /**
     * The CSS `max-height` property
     */
    maxH?: ResponsiveValue<CSS.Property.MaxHeight<Length>>;
    /**
     * The CSS `min-height` property
     */
    minHeight?: ResponsiveValue<CSS.Property.MinHeight<Length>>;
    /**
     * The CSS `min-height` property
     */
    minH?: ResponsiveValue<CSS.Property.MinHeight<Length>>;
    /**
     * The CSS `vertical-align` property
     */
    verticalAlign?: ResponsiveValue<CSS.Property.VerticalAlign<Length>>;
    /**
     * The CSS `overflow` property
     */
    overflow?: ResponsiveValue<CSS.Property.Overflow>;
    /**
     * The CSS `overflow-x` property
     */
    overflowX?: ResponsiveValue<CSS.Property.OverflowX>;
    /**
     * The CSS `overflow-y` property
     */
    overflowY?: ResponsiveValue<CSS.Property.OverflowY>;
    /**
     * The CSS `box-sizing` property
     */
    boxSizing?: CSS.Property.BoxSizing;
}
export declare const layout: import("@styled-system/core").StyleFn;
export declare const layoutParser: import("@styled-system/core").StyleFn;
