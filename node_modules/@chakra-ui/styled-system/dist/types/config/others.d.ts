/// <reference path="../@styled-system/core.d.ts" />
import * as CSS from "csstype";
import { Length, ResponsiveValue } from "../utils";
export interface OtherProps {
    /**
     * The CSS `animation` property
     */
    animation?: ResponsiveValue<CSS.Property.Animation>;
    /**
     * The CSS `appearance` property
     */
    appearance?: ResponsiveValue<CSS.Property.Appearance>;
    /**
     * The CSS `visibility` property
     */
    visibility?: ResponsiveValue<CSS.Property.Visibility>;
    /**
     * The CSS `user-select` property
     */
    userSelect?: ResponsiveValue<CSS.Property.UserSelect>;
    /**
     * The CSS `pointer-events` property
     */
    pointerEvents?: ResponsiveValue<CSS.Property.PointerEvents>;
    /**
     * The CSS `cursor` property
     */
    cursor?: ResponsiveValue<CSS.Property.Cursor>;
    /**
     * The CSS `resize` property
     */
    resize?: ResponsiveValue<CSS.Property.Resize>;
    /**
     * The CSS `object-fit` property
     */
    objectFit?: ResponsiveValue<CSS.Property.ObjectFit>;
    /**
     * The CSS `object-psition` property
     */
    objectPosition?: ResponsiveValue<CSS.Property.ObjectPosition<Length>>;
    /**
     * The CSS `float` property
     */
    float?: ResponsiveValue<CSS.Property.Float>;
    /**
     * The CSS `will-change` property
     */
    willChange?: ResponsiveValue<CSS.Property.WillChange>;
    /**
     * The CSS `filter` property
     */
    filter?: ResponsiveValue<CSS.Property.Filter>;
}
export declare const others: import("@styled-system/core").StyleFn;
export declare const othersParser: import("@styled-system/core").StyleFn;
