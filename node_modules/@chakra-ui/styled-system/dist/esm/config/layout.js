import { isNumber, memoizedGet as get } from "@chakra-ui/utils";
import { createParser, system } from "@styled-system/core";

function transform(value, scale) {
  var defaultValue = !isNumber(value) || value > 1 ? value : value * 100 + "%";
  return get(scale, value, defaultValue);
}

var config = {
  width: {
    property: "width",
    scale: "sizes",
    transform
  },
  w: {
    property: "width",
    scale: "sizes",
    transform
  },
  height: {
    property: "height",
    scale: "sizes"
  },
  h: {
    property: "height",
    scale: "sizes"
  },
  boxSize: {
    properties: ["width", "height"],
    scale: "sizes"
  },
  minWidth: {
    property: "minWidth",
    scale: "sizes"
  },
  minW: {
    property: "minWidth",
    scale: "sizes"
  },
  minHeight: {
    property: "minHeight",
    scale: "sizes"
  },
  minH: {
    property: "minHeight",
    scale: "sizes"
  },
  maxWidth: {
    property: "maxWidth",
    scale: "sizes"
  },
  maxW: {
    property: "maxWidth",
    scale: "sizes"
  },
  maxHeight: {
    property: "maxHeight",
    scale: "sizes"
  },
  maxH: {
    property: "maxHeight",
    scale: "sizes"
  },
  d: {
    property: "display"
  },
  overflow: true,
  overflowX: true,
  overflowY: true,
  display: true,
  verticalAlign: true,
  boxSizing: true
};
/**
 * Types for layout related CSS properties
 */

export var layout = system(config);
export var layoutParser = createParser(config);
//# sourceMappingURL=layout.js.map