{"version":3,"sources":["../../../src/config/layout.ts"],"names":["isNumber","memoizedGet","get","createParser","system","transform","value","scale","defaultValue","config","width","property","w","height","h","boxSize","properties","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","d","overflow","overflowX","overflowY","display","verticalAlign","boxSizing","layout","layoutParser"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAW,IAAIC,GAAlC,QAA6C,kBAA7C;AACA,SAAiBC,YAAjB,EAA+BC,MAA/B,QAA6C,qBAA7C;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA+BC,KAA/B,EAA2C;AACzC,MAAMC,YAAY,GAAG,CAACR,QAAQ,CAACM,KAAD,CAAT,IAAoBA,KAAK,GAAG,CAA5B,GAAgCA,KAAhC,GAA2CA,KAAK,GAAG,GAAnD,MAArB;AACA,SAAOJ,GAAG,CAACK,KAAD,EAAQD,KAAR,EAAeE,YAAf,CAAV;AACD;;AAED,IAAMC,MAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,OADL;AAELJ,IAAAA,KAAK,EAAE,OAFF;AAGLF,IAAAA;AAHK,GADc;AAMrBO,EAAAA,CAAC,EAAE;AACDD,IAAAA,QAAQ,EAAE,OADT;AAEDJ,IAAAA,KAAK,EAAE,OAFN;AAGDF,IAAAA;AAHC,GANkB;AAWrBQ,EAAAA,MAAM,EAAE;AACNF,IAAAA,QAAQ,EAAE,QADJ;AAENJ,IAAAA,KAAK,EAAE;AAFD,GAXa;AAerBO,EAAAA,CAAC,EAAE;AACDH,IAAAA,QAAQ,EAAE,QADT;AAEDJ,IAAAA,KAAK,EAAE;AAFN,GAfkB;AAmBrBQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,CAAC,OAAD,EAAU,QAAV,CADL;AAEPT,IAAAA,KAAK,EAAE;AAFA,GAnBY;AAuBrBU,EAAAA,QAAQ,EAAE;AACRN,IAAAA,QAAQ,EAAE,UADF;AAERJ,IAAAA,KAAK,EAAE;AAFC,GAvBW;AA2BrBW,EAAAA,IAAI,EAAE;AACJP,IAAAA,QAAQ,EAAE,UADN;AAEJJ,IAAAA,KAAK,EAAE;AAFH,GA3Be;AA+BrBY,EAAAA,SAAS,EAAE;AACTR,IAAAA,QAAQ,EAAE,WADD;AAETJ,IAAAA,KAAK,EAAE;AAFE,GA/BU;AAmCrBa,EAAAA,IAAI,EAAE;AACJT,IAAAA,QAAQ,EAAE,WADN;AAEJJ,IAAAA,KAAK,EAAE;AAFH,GAnCe;AAuCrBc,EAAAA,QAAQ,EAAE;AACRV,IAAAA,QAAQ,EAAE,UADF;AAERJ,IAAAA,KAAK,EAAE;AAFC,GAvCW;AA2CrBe,EAAAA,IAAI,EAAE;AACJX,IAAAA,QAAQ,EAAE,UADN;AAEJJ,IAAAA,KAAK,EAAE;AAFH,GA3Ce;AA+CrBgB,EAAAA,SAAS,EAAE;AACTZ,IAAAA,QAAQ,EAAE,WADD;AAETJ,IAAAA,KAAK,EAAE;AAFE,GA/CU;AAmDrBiB,EAAAA,IAAI,EAAE;AACJb,IAAAA,QAAQ,EAAE,WADN;AAEJJ,IAAAA,KAAK,EAAE;AAFH,GAnDe;AAuDrBkB,EAAAA,CAAC,EAAE;AACDd,IAAAA,QAAQ,EAAE;AADT,GAvDkB;AA0DrBe,EAAAA,QAAQ,EAAE,IA1DW;AA2DrBC,EAAAA,SAAS,EAAE,IA3DU;AA4DrBC,EAAAA,SAAS,EAAE,IA5DU;AA6DrBC,EAAAA,OAAO,EAAE,IA7DY;AA8DrBC,EAAAA,aAAa,EAAE,IA9DM;AA+DrBC,EAAAA,SAAS,EAAE;AA/DU,CAAvB;AAkEA;AACA;AACA;;AAoFA,OAAO,IAAMC,MAAM,GAAG5B,MAAM,CAACK,MAAD,CAArB;AACP,OAAO,IAAMwB,YAAY,GAAG9B,YAAY,CAACM,MAAD,CAAjC","sourcesContent":["import { isNumber, memoizedGet as get } from \"@chakra-ui/utils\"\nimport { Config, createParser, system } from \"@styled-system/core\"\nimport * as CSS from \"csstype\"\nimport { Length, ResponsiveValue } from \"../utils\"\n\nfunction transform(value: any, scale: any) {\n  const defaultValue = !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  return get(scale, value, defaultValue)\n}\n\nconst config: Config = {\n  width: {\n    property: \"width\",\n    scale: \"sizes\",\n    transform,\n  },\n  w: {\n    property: \"width\",\n    scale: \"sizes\",\n    transform,\n  },\n  height: {\n    property: \"height\",\n    scale: \"sizes\",\n  },\n  h: {\n    property: \"height\",\n    scale: \"sizes\",\n  },\n  boxSize: {\n    properties: [\"width\", \"height\"],\n    scale: \"sizes\",\n  },\n  minWidth: {\n    property: \"minWidth\",\n    scale: \"sizes\",\n  },\n  minW: {\n    property: \"minWidth\",\n    scale: \"sizes\",\n  },\n  minHeight: {\n    property: \"minHeight\",\n    scale: \"sizes\",\n  },\n  minH: {\n    property: \"minHeight\",\n    scale: \"sizes\",\n  },\n  maxWidth: {\n    property: \"maxWidth\",\n    scale: \"sizes\",\n  },\n  maxW: {\n    property: \"maxWidth\",\n    scale: \"sizes\",\n  },\n  maxHeight: {\n    property: \"maxHeight\",\n    scale: \"sizes\",\n  },\n  maxH: {\n    property: \"maxHeight\",\n    scale: \"sizes\",\n  },\n  d: {\n    property: \"display\",\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true,\n}\n\n/**\n * Types for layout related CSS properties\n */\nexport interface LayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  display?: ResponsiveValue<CSS.Property.Display>\n  /**\n   * The CSS `display` property\n   */\n  d?: ResponsiveValue<CSS.Property.Display>\n  /**\n   * The CSS `width` property\n   */\n  width?: ResponsiveValue<CSS.Property.Width<Length>>\n  /**\n   * The CSS `width` property\n   */\n  w?: ResponsiveValue<CSS.Property.Width<Length>>\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: ResponsiveValue<CSS.Property.Width<Length>>\n  /**\n   * The CSS `max-width` property\n   */\n  maxWidth?: ResponsiveValue<CSS.Property.MaxWidth<Length>>\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: ResponsiveValue<CSS.Property.MaxWidth<Length>>\n  /**\n   * The CSS `min-width` property\n   */\n  minWidth?: ResponsiveValue<CSS.Property.MinWidth<Length>>\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: ResponsiveValue<CSS.Property.MinWidth<Length>>\n  /**\n   * The CSS `height` property\n   */\n  height?: ResponsiveValue<CSS.Property.Height<Length>>\n  /**\n   * The CSS `height` property\n   */\n  h?: ResponsiveValue<CSS.Property.Height<Length>>\n  /**\n   * The CSS `max-height` property\n   */\n  maxHeight?: ResponsiveValue<CSS.Property.MaxHeight<Length>>\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: ResponsiveValue<CSS.Property.MaxHeight<Length>>\n  /**\n   * The CSS `min-height` property\n   */\n  minHeight?: ResponsiveValue<CSS.Property.MinHeight<Length>>\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: ResponsiveValue<CSS.Property.MinHeight<Length>>\n  /**\n   * The CSS `vertical-align` property\n   */\n  verticalAlign?: ResponsiveValue<CSS.Property.VerticalAlign<Length>>\n  /**\n   * The CSS `overflow` property\n   */\n  overflow?: ResponsiveValue<CSS.Property.Overflow>\n  /**\n   * The CSS `overflow-x` property\n   */\n  overflowX?: ResponsiveValue<CSS.Property.OverflowX>\n  /**\n   * The CSS `overflow-y` property\n   */\n  overflowY?: ResponsiveValue<CSS.Property.OverflowY>\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: CSS.Property.BoxSizing\n}\n\nexport const layout = system(config)\nexport const layoutParser = createParser(config)\n"],"file":"layout.js"}