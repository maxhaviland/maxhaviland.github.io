{"version":3,"sources":["../../src/fade.tsx"],"names":["variants","exit","opacity","transition","duration","ease","EASINGS","easeOut","enter","easeIn","fadeConfig","initial","animate","Fade","React","forwardRef","props","ref","unmountOnExit","isOpen","className","rest","shouldExpand","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAIA,IAAMA,QAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAEC,gBAAQC;AAFJ;AAFR,GAD4B;AAQlCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAEC,gBAAQG;AAFJ;AAFP;AAR2B,CAApC;AAiBO,IAAMC,UAAgC,GAAG;AAC9CC,EAAAA,OAAO,EAAE,MADqC;AAE9CC,EAAAA,OAAO,EAAE,OAFqC;AAG9CX,EAAAA,IAAI,EAAE,MAHwC;AAI9CD,EAAAA,QAAQ,EAARA;AAJ8C,CAAzC;;AAkBA,IAAMa,IAAI,gBAAGC,KAAK,CAACC,UAAN,CAA4C,SAASF,IAAT,CAC9DG,KAD8D,EAE9DC,GAF8D,EAG9D;AAAA,MACQC,aADR,GAC0DF,KAD1D,CACQE,aADR;AAAA,MAC2BC,MAD3B,GAC0DH,KAD1D;AAAA,MACmCI,SADnC,GAC0DJ,KAD1D,CACmCI,SADnC;AAAA,MACiDC,IADjD,iCAC0DL,KAD1D;;AAEA,MAAMM,YAAY,GAAGJ,aAAa,GAAGC,MAAM,IAAID,aAAb,GAA6B,IAA/D;AAEA,sBACE,oBAAC,6BAAD,QACGI,YAAY,iBACX,oBAAC,oBAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEL,GADP;AAEE,IAAA,SAAS,EAAE,eAAG,aAAH,EAAkBG,SAAlB;AAFb,KAGMV,UAHN;AAIE,IAAA,OAAO,EAAES,MAAM,IAAID,aAAV,GAA0B,OAA1B,GAAoC;AAJ/C,KAKMG,IALN,EAFJ,CADF;AAaD,CApBmB,CAAb;;;AAsBP,IAAIE,cAAJ,EAAa;AACXV,EAAAA,IAAI,CAACW,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype FadeMotionVariant = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: FadeMotionVariant = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut,\n    },\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn,\n    },\n  },\n}\n\nexport const fadeConfig: HTMLMotionProps<any> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\nexport interface FadeProps extends HTMLMotionProps<\"div\"> {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport const Fade = React.forwardRef<HTMLDivElement, FadeProps>(function Fade(\n  props,\n  ref,\n) {\n  const { unmountOnExit, in: isOpen, className, ...rest } = props\n  const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n  return (\n    <AnimatePresence>\n      {shouldExpand && (\n        <motion.div\n          ref={ref}\n          className={cx(\"chakra-fade\", className)}\n          {...fadeConfig}\n          animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n          {...rest}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\"\n}\n"],"file":"fade.js"}