"use strict";

exports.__esModule = true;
exports.StackContextProvider = StackContextProvider;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Context = /*#__PURE__*/React.createContext(null);

function StackContextProvider(props) {
  var children = props.children;
  var parent = React.useContext(Context);

  var _React$useState = React.useState(0),
      count = _React$useState[0],
      setCount = _React$useState[1];

  var context = React.useMemo(function () {
    return {
      parent: parent,
      count: count,
      addElement: function addElement() {
        setCount(function (count) {
          return count + 1;
        });
        parent == null ? void 0 : parent.addElement();
      },
      removeElement: function removeElement() {
        setCount(function (count) {
          return count - 1;
        });
        parent == null ? void 0 : parent.removeElement();
      }
    };
  }, [parent, count]);
  return /*#__PURE__*/React.createElement(Context.Provider, {
    value: context
  }, children);
}
//# sourceMappingURL=stack-context.js.map