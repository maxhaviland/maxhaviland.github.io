{"version":3,"sources":["../../src/stack-context.tsx"],"names":["Context","React","createContext","StackContextProvider","props","children","parent","useContext","useState","count","setCount","context","useMemo","addElement","removeElement"],"mappings":";;;;;AAAA;;;;;;AA4BA,IAAMA,OAAO,gBAAGC,KAAK,CAACC,aAAN,CAAgD,IAAhD,CAAhB;;AAEO,SAASC,oBAAT,CAA8BC,KAA9B,EAAgE;AAAA,MAC7DC,QAD6D,GAChDD,KADgD,CAC7DC,QAD6D;AAGrE,MAAMC,MAAM,GAAGL,KAAK,CAACM,UAAN,CAAiBP,OAAjB,CAAf;;AAHqE,wBAI3CC,KAAK,CAACO,QAAN,CAAe,CAAf,CAJ2C;AAAA,MAI9DC,KAJ8D;AAAA,MAIvDC,QAJuD;;AAMrE,MAAMC,OAAO,GAAGV,KAAK,CAACW,OAAN,CACd;AAAA,WAAO;AACLN,MAAAA,MAAM,EAANA,MADK;AAELG,MAAAA,KAAK,EAALA,KAFK;AAGLI,MAAAA,UAHK,wBAGQ;AACXH,QAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,iBAAWA,KAAK,GAAG,CAAnB;AAAA,SAAD,CAAR;AACAH,QAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEO,UAAR;AACD,OANI;AAOLC,MAAAA,aAPK,2BAOW;AACdJ,QAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,iBAAWA,KAAK,GAAG,CAAnB;AAAA,SAAD,CAAR;AACAH,QAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEQ,aAAR;AACD;AAVI,KAAP;AAAA,GADc,EAad,CAACR,MAAD,EAASG,KAAT,CAbc,CAAhB;AAgBA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEE;AAAzB,KAAmCN,QAAnC,CAAP;AACD","sourcesContent":["import * as React from \"react\"\n\n/**\n * const returnType = {\n  stackIndex: 0,\n  elements: {\n    menu: [],\n    popover: [],\n    modal: [],\n    tooltip: [],\n  },\n  addElement() {},\n  removeElement() {},\n  count: 9,\n};\n */\n\ninterface StackContextProviderProps extends React.HTMLAttributes<HTMLElement> {\n  children: React.ReactNode\n}\n\ninterface OverlayStackContext {\n  parent: OverlayStackContext | null\n  count: number\n  addElement: () => void\n  removeElement: () => void\n}\n\nconst Context = React.createContext<OverlayStackContext | null>(null)\n\nexport function StackContextProvider(props: StackContextProviderProps) {\n  const { children } = props\n\n  const parent = React.useContext(Context)\n  const [count, setCount] = React.useState(0)\n\n  const context = React.useMemo(\n    () => ({\n      parent,\n      count,\n      addElement() {\n        setCount((count) => count + 1)\n        parent?.addElement()\n      },\n      removeElement() {\n        setCount((count) => count - 1)\n        parent?.removeElement()\n      },\n    }),\n    [parent, count],\n  )\n\n  return <Context.Provider value={context}>{children}</Context.Provider>\n}\n"],"file":"stack-context.js"}