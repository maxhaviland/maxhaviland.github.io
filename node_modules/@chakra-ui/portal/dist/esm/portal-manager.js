import * as React from "react";
import { createContext, __DEV__ } from "@chakra-ui/utils";
import { useSafeLayoutEffect, useForceUpdate } from "@chakra-ui/hooks";
var [PortalManagerContextProvider, usePortalManager] = createContext({
  strict: false,
  name: "PortalManagerContext"
});
export { usePortalManager };

/**
 * PortalManager
 *
 * Used to manage multiple portals within an application.
 * It must be render only once, at the root of your application.
 *
 * Inspired by BaseWeb's LayerManager component
 */
export var PortalManager = props => {
  var {
    children,
    zIndex
  } = props;
  /**
   * The element that wraps the stacked layers
   */

  var ref = React.useRef(null);
  var forceUpdate = useForceUpdate();
  /**
   * force an update on mount so the Provider works correctly
   */

  useSafeLayoutEffect(() => {
    forceUpdate();
  }, []);
  /**
   * let's detect if use has mutiple instances of this component
   */

  var parentManager = usePortalManager();
  var context = {
    node: (parentManager == null ? void 0 : parentManager.node) || ref.current,
    zIndex
  };
  return /*#__PURE__*/React.createElement(PortalManagerContextProvider, {
    value: context
  }, children, /*#__PURE__*/React.createElement("div", {
    className: "chakra-portal-manager",
    ref: ref
  }));
};

if (__DEV__) {
  PortalManager.displayName = "PortalManager";
}
//# sourceMappingURL=portal-manager.js.map