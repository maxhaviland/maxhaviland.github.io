{"version":3,"sources":["../../src/stack-context.tsx"],"names":["React","Context","createContext","StackContextProvider","props","children","parent","useContext","count","setCount","useState","context","useMemo","addElement","removeElement"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA,IAAMC,OAAO,gBAAGD,KAAK,CAACE,aAAN,CAAgD,IAAhD,CAAhB;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAgE;AACrE,MAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,MAAME,MAAM,GAAGN,KAAK,CAACO,UAAN,CAAiBN,OAAjB,CAAf;AACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,CAAf,CAA1B;AAEA,MAAMC,OAAO,GAAGX,KAAK,CAACY,OAAN,CACd,OAAO;AACLN,IAAAA,MADK;AAELE,IAAAA,KAFK;;AAGLK,IAAAA,UAAU,GAAG;AACXJ,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACAF,MAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEO,UAAR;AACD,KANI;;AAOLC,IAAAA,aAAa,GAAG;AACdL,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACAF,MAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEQ,aAAR;AACD;;AAVI,GAAP,CADc,EAad,CAACR,MAAD,EAASE,KAAT,CAbc,CAAhB;AAgBA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEG;AAAzB,KAAmCN,QAAnC,CAAP;AACD","sourcesContent":["import * as React from \"react\"\n\n/**\n * const returnType = {\n  stackIndex: 0,\n  elements: {\n    menu: [],\n    popover: [],\n    modal: [],\n    tooltip: [],\n  },\n  addElement() {},\n  removeElement() {},\n  count: 9,\n};\n */\n\ninterface StackContextProviderProps extends React.HTMLAttributes<HTMLElement> {\n  children: React.ReactNode\n}\n\ninterface OverlayStackContext {\n  parent: OverlayStackContext | null\n  count: number\n  addElement: () => void\n  removeElement: () => void\n}\n\nconst Context = React.createContext<OverlayStackContext | null>(null)\n\nexport function StackContextProvider(props: StackContextProviderProps) {\n  const { children } = props\n\n  const parent = React.useContext(Context)\n  const [count, setCount] = React.useState(0)\n\n  const context = React.useMemo(\n    () => ({\n      parent,\n      count,\n      addElement() {\n        setCount((count) => count + 1)\n        parent?.addElement()\n      },\n      removeElement() {\n        setCount((count) => count - 1)\n        parent?.removeElement()\n      },\n    }),\n    [parent, count],\n  )\n\n  return <Context.Provider value={context}>{children}</Context.Provider>\n}\n"],"file":"stack-context.js"}