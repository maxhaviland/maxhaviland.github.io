{"version":3,"sources":["../../src/use-id.ts"],"names":["generatePrefix","prefix","id","useId","idProp","uuid","result","useIds","prefixes","ids","map"],"mappings":";;;;;;AAAA;;AAEA,SAASA,cAAT,CAAwBC,MAAxB,EAAwCC,EAAxC,EAAoD;AAClD,SAAUD,MAAV,SAAoBC,EAApB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,KAAT,CAAeC,MAAf,EAAgCH,MAAhC,EAAiD;AACtD,MAAMI,IAAI,GAAG,oBAAb;AACA,MAAMH,EAAE,GAAGE,MAAH,WAAGA,MAAH,GAAaC,IAArB;AACA,MAAMC,MAAM,GAAGL,MAAM,GAAGD,cAAc,CAACC,MAAD,EAASC,EAAT,CAAjB,GAAgCA,EAArD;AACA,SAAOI,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,MAAT,CAAgBH,MAAhB,EAAwD;AAC7D,MAAMF,EAAE,GAAGC,KAAK,CAACC,MAAD,CAAhB;;AAD6D,oCAApBI,QAAoB;AAApBA,IAAAA,QAAoB;AAAA;;AAE7D,MAAMC,GAAG,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAACT,MAAD;AAAA,WAAYD,cAAc,CAACC,MAAD,EAASC,EAAT,CAA1B;AAAA,GAAb,CAAZ;AACA,SAAOO,GAAP;AACD","sourcesContent":["import { useId as useUID } from \"@reach/auto-id\"\n\nfunction generatePrefix(prefix: string, id: string) {\n  return `${prefix}-${id}`\n}\n\n/**\n * Reack hook to generate unique id\n *\n * @param idProp the external id passed from the user\n * @param prefix prefix to append before the id\n */\nexport function useId(idProp?: string, prefix?: string) {\n  const uuid = useUID() as string\n  const id = idProp ?? uuid\n  const result = prefix ? generatePrefix(prefix, id) : id\n  return result as string\n}\n\n/**\n * Reack hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\nexport function useIds(idProp?: string, ...prefixes: string[]) {\n  const id = useId(idProp)\n  const ids = prefixes.map((prefix) => generatePrefix(prefix, id))\n  return ids\n}\n"],"file":"use-id.js"}