import * as React from "react";
import { isBrowser } from "@chakra-ui/utils";
import { useLatestRef } from "./use-latest-ref";
/**
 * React hook to manage browser event listeners
 *
 * @param event the event name
 * @param handler the event handler function to execute
 * @param doc the dom environment to execute against (defaults to `document`)
 * @param options the event listener options
 */

export function useEventListener(event, handler, doc, options) {
  if (doc === void 0) {
    doc = isBrowser ? document : null;
  }

  var savedHandler = useLatestRef(handler);
  React.useEffect(() => {
    if (!doc) return undefined;

    var listener = event => {
      savedHandler.current == null ? void 0 : savedHandler.current(event);
    };

    doc.addEventListener(event, listener, options);
    return () => {
      doc.removeEventListener(event, listener, options);
    };
  }, [event, doc, options, savedHandler]);
  return () => {
    if (savedHandler.current) {
      var _doc;

      (_doc = doc) == null ? void 0 : _doc.removeEventListener(event, savedHandler.current, options);
    }
  };
}
//# sourceMappingURL=use-event-listener.js.map