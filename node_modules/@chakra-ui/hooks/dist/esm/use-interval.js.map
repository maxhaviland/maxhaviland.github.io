{"version":3,"sources":["../../src/use-interval.ts"],"names":["React","useLatestRef","useInterval","callback","delay","callbackRef","useEffect","intervalId","tick","current","window","setInterval","clearInterval"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA2CC,KAA3C,EAAiE;AACtE,MAAMC,WAAW,GAAGJ,YAAY,CAACE,QAAD,CAAhC;AAEAH,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,QAAIC,UAAyB,GAAG,IAAhC;;AACA,QAAMC,IAAI,GAAG,MAAMH,WAAW,CAACI,OAAlB,oBAAMJ,WAAW,CAACI,OAAZ,EAAnB;;AACA,QAAIL,KAAK,KAAK,IAAd,EAAoB;AAClBG,MAAAA,UAAU,GAAGG,MAAM,CAACC,WAAP,CAAmBH,IAAnB,EAAyBJ,KAAzB,CAAb;AACD;;AACD,WAAO,MAAM;AACX,UAAIG,UAAJ,EAAgB;AACdG,QAAAA,MAAM,CAACE,aAAP,CAAqBL,UAArB;AACD;AACF,KAJD;AAKD,GAXD,EAWG,CAACH,KAAD,EAAQC,WAAR,CAXH;AAYD","sourcesContent":["import * as React from \"react\"\nimport { useLatestRef } from \"./use-latest-ref\"\n\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\nexport function useInterval(callback: () => void, delay: number | null) {\n  const callbackRef = useLatestRef(callback)\n\n  React.useEffect(() => {\n    let intervalId: number | null = null\n    const tick = () => callbackRef.current?.()\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay)\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId)\n      }\n    }\n  }, [delay, callbackRef])\n}\n"],"file":"use-interval.js"}