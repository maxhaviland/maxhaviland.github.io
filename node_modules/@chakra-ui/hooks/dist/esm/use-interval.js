import * as React from "react";
import { useLatestRef } from "./use-latest-ref";
/**
 * React Hook that provides a declarative `setInterval`
 *
 * @param callback the callback to execute at interval
 * @param delay the `setInterval` delay (in ms)
 */

export function useInterval(callback, delay) {
  var callbackRef = useLatestRef(callback);
  React.useEffect(() => {
    var intervalId = null;

    var tick = () => callbackRef.current == null ? void 0 : callbackRef.current();

    if (delay !== null) {
      intervalId = window.setInterval(tick, delay);
    }

    return () => {
      if (intervalId) {
        window.clearInterval(intervalId);
      }
    };
  }, [delay, callbackRef]);
}
//# sourceMappingURL=use-interval.js.map