{"version":3,"sources":["../../src/index.tsx"],"names":["FocusLock","props","initialFocusRef","finalFocusRef","contentRef","restoreFocus","children","isDisabled","autoFocus","persistentFocus","onActivation","React","useCallback","current","focus","focusables","length","onDeactivation","returnFocus","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA,MAE1DC,eAF0D,GAUxDD,KAVwD,CAE1DC,eAF0D;AAAA,MAG1DC,aAH0D,GAUxDF,KAVwD,CAG1DE,aAH0D;AAAA,MAI1DC,UAJ0D,GAUxDH,KAVwD,CAI1DG,UAJ0D;AAAA,MAK1DC,YAL0D,GAUxDJ,KAVwD,CAK1DI,YAL0D;AAAA,MAM1DC,QAN0D,GAUxDL,KAVwD,CAM1DK,QAN0D;AAAA,MAO1DC,UAP0D,GAUxDN,KAVwD,CAO1DM,UAP0D;AAAA,MAQ1DC,SAR0D,GAUxDP,KAVwD,CAQ1DO,SAR0D;AAAA,MAS1DC,eAT0D,GAUxDR,KAVwD,CAS1DQ,eAT0D;AAY5D,MAAMC,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAkB,YAAM;AAC3C,QAAIV,eAAJ,oBAAIA,eAAe,CAAEW,OAArB,EAA8B;AAC5BX,MAAAA,eAAe,CAACW,OAAhB,CAAwBC,KAAxB;AACD,KAFD,MAEO,IAAIV,UAAJ,oBAAIA,UAAU,CAAES,OAAhB,EAAyB;AAC9B,UAAME,UAAU,GAAG,4BAAgBX,UAAU,CAACS,OAA3B,CAAnB;;AACA,UAAIE,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,0BAAMZ,UAAU,CAACS,OAAjB;AACD;AACF;AACF,GAToB,EASlB,CAACX,eAAD,EAAkBE,UAAlB,CATkB,CAArB;AAWA,MAAMa,cAAc,GAAGN,KAAK,CAACC,WAAN,CAAkB,YAAM;AAAA;;AAC7CT,IAAAA,aAAa,QAAb,qCAAAA,aAAa,CAAEU,OAAf,2CAAwBC,KAAxB;AACD,GAFsB,EAEpB,CAACX,aAAD,CAFoB,CAAvB;AAIA,MAAMe,WAAW,GAAGb,YAAY,IAAI,CAACF,aAArC;AAEA,sBACE,oBAAC,0BAAD;AACE,IAAA,eAAe,EAAEM,eADnB;AAEE,IAAA,SAAS,EAAED,SAFb;AAGE,IAAA,QAAQ,EAAED,UAHZ;AAIE,IAAA,YAAY,EAAEG,YAJhB;AAKE,IAAA,cAAc,EAAEO,cALlB;AAME,IAAA,WAAW,EAAEC;AANf,KAQGZ,QARH,CADF;AAYD,CAzCM;;;;AA2CP,IAAIa,cAAJ,EAAa;AACXnB,EAAAA,SAAS,CAACoB,WAAV,GAAwB,WAAxB;AACD;;eAEcpB,S","sourcesContent":["import * as React from \"react\"\nimport ReactFocusLock from \"react-focus-lock\"\nimport {\n  __DEV__,\n  getAllFocusable,\n  focus,\n  FocusableElement,\n} from \"@chakra-ui/utils\"\n\nexport interface FocusLockProps {\n  /**\n   * `ref` of the element to receive focus initially\n   */\n  initialFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * `ref` of the element to return focus to when `FocusLock`\n   * unmounts\n   */\n  finalFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * The `ref` of the wrapper for which the focus-lock wraps\n   */\n  contentRef?: React.RefObject<HTMLElement>\n  /**\n   * If `true`, focus will be restored to the element that\n   * triggered the `FocusLock` once it unmounts\n   */\n  restoreFocus?: boolean\n  /**\n   * The component to render\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, focus trapping will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the first focuable element within the `children`\n   * will ne auto-focused once `FocusLock` mounts\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, disables text selections inside, and outside focus lock.\n   * @default `false`\n   */\n  persistentFocus?: boolean\n}\n\n/**\n * React component to trap focus within an element or component.\n * Mostly used in Modals, Popovers, etc.\n *\n * @see Docs https://chakra-ui.com/components/focuslock\n */\nexport const FocusLock: React.FC<FocusLockProps> = (props) => {\n  const {\n    initialFocusRef,\n    finalFocusRef,\n    contentRef,\n    restoreFocus,\n    children,\n    isDisabled,\n    autoFocus,\n    persistentFocus,\n  } = props\n\n  const onActivation = React.useCallback(() => {\n    if (initialFocusRef?.current) {\n      initialFocusRef.current.focus()\n    } else if (contentRef?.current) {\n      const focusables = getAllFocusable(contentRef.current)\n      if (focusables.length === 0) {\n        focus(contentRef.current)\n      }\n    }\n  }, [initialFocusRef, contentRef])\n\n  const onDeactivation = React.useCallback(() => {\n    finalFocusRef?.current?.focus()\n  }, [finalFocusRef])\n\n  const returnFocus = restoreFocus && !finalFocusRef\n\n  return (\n    <ReactFocusLock\n      persistentFocus={persistentFocus}\n      autoFocus={autoFocus}\n      disabled={isDisabled}\n      onActivation={onActivation}\n      onDeactivation={onDeactivation}\n      returnFocus={returnFocus}\n    >\n      {children}\n    </ReactFocusLock>\n  )\n}\n\nif (__DEV__) {\n  FocusLock.displayName = \"FocusLock\"\n}\n\nexport default FocusLock\n"],"file":"index.js"}