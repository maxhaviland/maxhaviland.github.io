{"version":3,"sources":["../../src/accordion.tsx"],"names":["Accordion","ref","children","reduceMotion","props","styles","ownProps","htmlProps","context","ctx","React","useMemo","className","__DEV__","displayName","name","errorMessage","AccordionItemProvider","useAccordionItemContext","AccordionItem","containerStyles","container","overflowAnchor","_context","isExpanded","isOpen","isDisabled","useAccordionItemState","onClose","onOpen","AccordionButton","getButtonProps","buttonProps","buttonStyles","display","alignItems","width","transition","outline","button","AccordionPanel","getPanelProps","panelProps","_className","hidden","child","panel","AccordionIcon","iconStyles","fontSize","opacity","transform","undefined","transformOrigin"],"mappings":";;;;;;AAAA;;AACA;;AAWA;;AACA;;AAQA;;AACA;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,SAAS,gBAAG,wBAAkC,SAASA,SAAT,OAEzDC,GAFyD,EAGzD;AAAA,MAFEC,QAEF,QAFEA,QAEF;AAAA,MAFYC,YAEZ,QAFYA,YAEZ;AAAA,MAF6BC,KAE7B;;AACA,MAAMC,MAAM,GAAG,iCAAoB,WAApB,EAAiCD,KAAjC,CAAf;AACA,MAAME,QAAQ,GAAG,8BAAiBF,KAAjB,CAAjB;;AAFA,sBAIkC,iCAAaE,QAAb,CAJlC;AAAA,MAIQC,SAJR,iBAIQA,SAJR;AAAA,MAIsBC,OAJtB;;AAMA,MAAMC,GAAG,GAAGC,KAAK,CAACC,OAAN,CACV;AAAA,wBAAYH,OAAZ;AAAqBL,MAAAA,YAAY,EAAE,CAAC,CAACA;AAArC;AAAA,GADU,EAEV,CAACK,OAAD,EAAUL,YAAV,CAFU,CAAZ;AAKA,sBACE,oBAAC,gCAAD;AAAmB,IAAA,KAAK,EAAEM;AAA1B,kBACE,oBAAC,sBAAD;AAAgB,IAAA,KAAK,EAAEJ;AAAvB,kBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEJ;AADP,KAEMM,SAFN;AAGE,IAAA,SAAS,EAAE,eAAG,kBAAH,EAAuBH,KAAK,CAACQ,SAA7B;AAHb,MAKGV,QALH,CADF,CADF,CADF;AAaD,CA3BwB,CAAlB;;;AA6BP,IAAIW,cAAJ,EAAa;AACXb,EAAAA,SAAS,CAACc,WAAV,GAAwB,WAAxB;AACD;;qBAIwD,0BAEvD;AACAC,EAAAA,IAAI,EAAE,sBADN;AAEAC,EAAAA,YAAY,EACV;AAHF,CAFuD,C;IAAlDC,qB;IAAuBC,uB;;AAiB9B;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,aAAa,gBAAG,wBAC3B,SAASA,aAAT,CAAuBf,KAAvB,EAA8BH,GAA9B,EAAmC;AAAA,MACzBC,QADyB,GACDE,KADC,CACzBF,QADyB;AAAA,MACfU,SADe,GACDR,KADC,CACfQ,SADe;;AAAA,0BAEC,qCAAiBR,KAAjB,CAFD;AAAA,MAEzBG,SAFyB,qBAEzBA,SAFyB;AAAA,MAEXC,OAFW;;AAIjC,MAAMH,MAAM,GAAG,wBAAf;;AACA,MAAMe,eAAkC,gBACnCf,MAAM,CAACgB,SAD4B;AAEtCC,IAAAA,cAAc,EAAE;AAFsB,IAAxC;;AAKA,MAAMC,QAAQ,GAAGb,KAAK,CAACC,OAAN,CAAc;AAAA,WAAMH,OAAN;AAAA,GAAd,EAA6B,CAACA,OAAD,CAA7B,CAAjB;;AAEA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEe;AAA9B,kBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEtB;AADP,KAEMM,SAFN;AAGE,IAAA,SAAS,EAAE,eAAG,wBAAH,EAA6BK,SAA7B,CAHb;AAIE,IAAA,KAAK,EAAEQ;AAJT,MAMG,oBAAQlB,QAAR,EAAkB;AACjBsB,IAAAA,UAAU,EAAE,CAAC,CAAChB,OAAO,CAACiB,MADL;AAEjBC,IAAAA,UAAU,EAAE,CAAC,CAAClB,OAAO,CAACkB;AAFL,GAAlB,CANH,CADF,CADF;AAeD,CA5B0B,CAAtB;;;AA+BP,IAAIb,cAAJ,EAAa;AACXM,EAAAA,aAAa,CAACL,WAAd,GAA4B,eAA5B;AACD;AAED;AACA;AACA;;;AACO,SAASa,qBAAT,GAAiC;AAAA,8BACUT,uBAAuB,EADjC;AAAA,MAC9BO,MAD8B,yBAC9BA,MAD8B;AAAA,MACtBC,UADsB,yBACtBA,UADsB;AAAA,MACVE,OADU,yBACVA,OADU;AAAA,MACDC,MADC,yBACDA,MADC;;AAEtC,SAAO;AAAEJ,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,OAAO,EAAPA,OAAV;AAAmBF,IAAAA,UAAU,EAAVA,UAAnB;AAA+BG,IAAAA,MAAM,EAANA;AAA/B,GAAP;AACD;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,eAAe,gBAAG,wBAC7B,SAASA,eAAT,CAAyB1B,KAAzB,EAAgCH,GAAhC,EAAqC;AAAA,+BACRiB,uBAAuB,EADf;AAAA,MAC3Ba,cAD2B,0BAC3BA,cAD2B;;AAEnC,MAAMC,WAAW,GAAGD,cAAc,CAAC3B,KAAD,EAAQH,GAAR,CAAlC;AAEA,MAAMI,MAAM,GAAG,wBAAf;;AACA,MAAM4B,YAA+B;AACnCC,IAAAA,OAAO,EAAE,MAD0B;AAEnCC,IAAAA,UAAU,EAAE,QAFuB;AAGnCC,IAAAA,KAAK,EAAE,MAH4B;AAInCC,IAAAA,UAAU,EAAE,UAJuB;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,KAMhCjC,MAAM,CAACkC,MANyB,CAArC;;AASA,sBACE,oBAAC,cAAD,CAAQ,MAAR,eACMP,WADN;AAEE,IAAA,SAAS,EAAE,eAAG,0BAAH,EAA+B5B,KAAK,CAACQ,SAArC,CAFb;AAGE,IAAA,KAAK,EAAEqB;AAHT,KADF;AAOD,CAtB4B,CAAxB;;;AAyBP,IAAIpB,cAAJ,EAAa;AACXiB,EAAAA,eAAe,CAAChB,WAAhB,GAA8B,iBAA9B;AACD;;AAID;AACA;AACA;AACA;AACA;AACA;AACO,IAAM0B,cAAc,gBAAG,wBAC5B,SAASA,cAAT,CAAwBpC,KAAxB,EAA+BH,GAA/B,EAAoC;AAAA,6BACT,yCADS;AAAA,MAC1BE,YAD0B,wBAC1BA,YAD0B;;AAAA,+BAEAe,uBAAuB,EAFvB;AAAA,MAE1BuB,aAF0B,0BAE1BA,aAF0B;AAAA,MAEXhB,MAFW,0BAEXA,MAFW,EAIlC;;;AACA,MAAMiB,UAAU,GAAGD,aAAa,CAACrC,KAAD,EAAQH,GAAR,CAAhC;;AAEA,MAAM0C,UAAU,GAAG,eAAG,yBAAH,EAA8BvC,KAAK,CAACQ,SAApC,CAAnB;;AACA,MAAMP,MAAM,GAAG,wBAAf;;AAEA,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAOuC,UAAU,CAACE,MAAlB;AACD;;AAED,MAAMC,KAAK,gBACT,oBAAC,cAAD,CAAQ,GAAR,eAAgBH,UAAhB;AAA4B,IAAA,KAAK,EAAErC,MAAM,CAACyC,KAA1C;AAAiD,IAAA,SAAS,EAAEH;AAA5D,KADF;;AAIA,MAAI,CAACxC,YAAL,EAAmB;AACjB,wBAAO,oBAAC,oBAAD;AAAU,YAAIsB;AAAd,OAAuBoB,KAAvB,CAAP;AACD;;AAED,SAAOA,KAAP;AACD,CAxB2B,CAAvB;;;AA2BP,IAAIhC,cAAJ,EAAa;AACX2B,EAAAA,cAAc,CAAC1B,WAAf,GAA6B,gBAA7B;AACD;AAED;AACA;AACA;AACA;;;AACO,IAAMiC,aAAkC,GAAG,SAArCA,aAAqC,CAAC3C,KAAD,EAAW;AAAA,+BAC5Bc,uBAAuB,EADK;AAAA,MACnDO,MADmD,0BACnDA,MADmD;AAAA,MAC3CC,UAD2C,0BAC3CA,UAD2C;;AAAA,8BAElC,yCAFkC;AAAA,MAEnDvB,YAFmD,yBAEnDA,YAFmD;;AAI3D,MAAM6C,UAA6B,GAAG;AACpCC,IAAAA,QAAQ,EAAE,QAD0B;AAEpCC,IAAAA,OAAO,EAAExB,UAAU,GAAG,GAAH,GAAS,CAFQ;AAGpCyB,IAAAA,SAAS,EAAE1B,MAAM,GAAG,iBAAH,GAAuB2B,SAHJ;AAIpCf,IAAAA,UAAU,EAAElC,YAAY,GAAGiD,SAAH,GAAe,gBAJH;AAKpCC,IAAAA,eAAe,EAAE;AALmB,GAAtC;AAQA,sBACE,oBAAC,UAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAA0B,uBAA1B;AAAsC,IAAA,KAAK,EAAEL;AAA7C,KAA6D5C,KAA7D,gBACE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,CAAC,EAAC;AAFJ,IADF,CADF;AAQD,CApBM;;;;AAsBP,IAAIS,cAAJ,EAAa;AACXkC,EAAAA,aAAa,CAACjC,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { Collapse } from \"@chakra-ui/transition\"\nimport {\n  createContext,\n  cx,\n  Omit,\n  MaybeRenderProp,\n  runIfFn,\n  __DEV__,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  AccordionProvider,\n  useAccordion,\n  useAccordionContext,\n  useAccordionItem,\n  UseAccordionItemProps,\n  UseAccordionItemReturn,\n  UseAccordionProps,\n} from \"./use-accordion\"\n\nexport interface AccordionProps\n  extends UseAccordionProps,\n    Omit<HTMLChakraProps<\"div\">, keyof UseAccordionProps>,\n    ThemingProps {\n  /**\n   * If `true`, height animation and transitions will be disabled.\n   */\n  reduceMotion?: boolean\n}\n\n/**\n * The wrapper that provides context and focus management\n * for all accordion items.\n *\n * It wraps all accordion items in a `div` for better grouping.\n * @see Docs https://chakra-ui.com/components/accordion\n */\nexport const Accordion = forwardRef<AccordionProps, \"div\">(function Accordion(\n  { children, reduceMotion, ...props },\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Accordion\", props)\n  const ownProps = omitThemingProps(props)\n\n  const { htmlProps, ...context } = useAccordion(ownProps)\n\n  const ctx = React.useMemo(\n    () => ({ ...context, reduceMotion: !!reduceMotion }),\n    [context, reduceMotion],\n  )\n\n  return (\n    <AccordionProvider value={ctx}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          {...htmlProps}\n          className={cx(\"chakra-accordion\", props.className)}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    </AccordionProvider>\n  )\n})\n\nif (__DEV__) {\n  Accordion.displayName = \"Accordion\"\n}\n\ntype AccordionItemContext = Omit<UseAccordionItemReturn, \"htmlProps\">\n\nconst [AccordionItemProvider, useAccordionItemContext] = createContext<\n  AccordionItemContext\n>({\n  name: \"AccordionItemContext\",\n  errorMessage:\n    \"useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` \",\n})\n\nexport interface AccordionItemProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof UseAccordionItemProps>,\n    UseAccordionItemProps {\n  children?: MaybeRenderProp<{\n    isExpanded: boolean\n    isDisabled: boolean\n  }>\n}\n\n/**\n * AccordionItem is a single accordion that provides the open-close\n * behavior when the accordion button is clicked.\n *\n * It also provides context for the accordion button and panel.\n */\nexport const AccordionItem = forwardRef<AccordionItemProps, \"div\">(\n  function AccordionItem(props, ref) {\n    const { children, className } = props\n    const { htmlProps, ...context } = useAccordionItem(props)\n\n    const styles = useStyles()\n    const containerStyles: SystemStyleObject = {\n      ...styles.container,\n      overflowAnchor: \"none\",\n    }\n\n    const _context = React.useMemo(() => context, [context])\n\n    return (\n      <AccordionItemProvider value={_context}>\n        <chakra.div\n          ref={ref}\n          {...htmlProps}\n          className={cx(\"chakra-accordion__item\", className)}\n          __css={containerStyles}\n        >\n          {runIfFn(children, {\n            isExpanded: !!context.isOpen,\n            isDisabled: !!context.isDisabled,\n          })}\n        </chakra.div>\n      </AccordionItemProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionItem.displayName = \"AccordionItem\"\n}\n\n/**\n * React hook to get the state and actions of an accordion item\n */\nexport function useAccordionItemState() {\n  const { isOpen, isDisabled, onClose, onOpen } = useAccordionItemContext()\n  return { isOpen, onClose, isDisabled, onOpen }\n}\n\nexport interface AccordionButtonProps extends HTMLChakraProps<\"button\"> {}\n\n/**\n * AccordionButton is used expands and collapses an accordion item.\n * It must be a child of `AccordionItem`.\n *\n * Note ðŸš¨: Each accordion button must be wrapped in an heading tag,\n * that is appropriate for the information architecture of the page.\n */\nexport const AccordionButton = forwardRef<AccordionButtonProps, \"button\">(\n  function AccordionButton(props, ref) {\n    const { getButtonProps } = useAccordionItemContext()\n    const buttonProps = getButtonProps(props, ref)\n\n    const styles = useStyles()\n    const buttonStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      transition: \"all 0.2s\",\n      outline: 0,\n      ...styles.button,\n    }\n\n    return (\n      <chakra.button\n        {...buttonProps}\n        className={cx(\"chakra-accordion__button\", props.className)}\n        __css={buttonStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionButton.displayName = \"AccordionButton\"\n}\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  function AccordionPanel(props, ref) {\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(props, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", props.className)\n    const styles = useStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return <Collapse in={isOpen}>{child}</Collapse>\n    }\n\n    return child\n  },\n)\n\nif (__DEV__) {\n  AccordionPanel.displayName = \"AccordionPanel\"\n}\n\n/**\n * AccordionIcon that gives a visual cue of the open/close state of the accordion item.\n * It rotates `180deg` based on the open/close state.\n */\nexport const AccordionIcon: React.FC<IconProps> = (props) => {\n  const { isOpen, isDisabled } = useAccordionItemContext()\n  const { reduceMotion } = useAccordionContext()\n\n  const iconStyles: SystemStyleObject = {\n    fontSize: \"1.25em\",\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : undefined,\n    transition: reduceMotion ? undefined : \"transform 0.2s\",\n    transformOrigin: \"center\",\n  }\n\n  return (\n    <Icon viewBox=\"0 0 24 24\" aria-hidden __css={iconStyles} {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n      />\n    </Icon>\n  )\n}\n\nif (__DEV__) {\n  AccordionIcon.displayName = \"AccordionIcon\"\n}\n"],"file":"accordion.js"}