{"version":3,"sources":["../../src/use-radio.ts"],"names":["useRadio","props","defaultIsChecked","isCheckedProp","isChecked","isFocusable","isDisabled","isReadOnly","isRequired","onChange","isInvalid","name","value","id","htmlProps","isFocused","setFocused","isHovered","setHovering","isActive","setActive","ref","Boolean","isCheckedState","setChecked","isControlled","handleChange","event","preventDefault","target","checked","onKeyDown","key","on","onKeyUp","off","getCheckboxProps","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","inputProps","getInputProps","forwardedRef","ownProps","trulyDisabled","disabled","type","onBlur","onFocus","style","visuallyHiddenStyle","getLabelProps","stop","onTouchStart","state","stopPropagation"],"mappings":"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","sourcesContent":["import { useBoolean, useControllableProp } from \"@chakra-ui/hooks\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  dataAttr,\n  mergeRefs,\n  pick,\n  PropGetter,\n} from \"@chakra-ui/utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport {\n  ChangeEvent,\n  SyntheticEvent,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\"\nimport { useFormControl } from \"@chakra-ui/form-control\"\n\n/**\n * @todo use the `useClickable` hook here\n * to manage the isFocusable & isDisabled props\n */\nexport interface UseRadioProps {\n  /**\n   * id assigned to input\n   */\n  id?: string\n  /**\n   * The name of the input field in a radio\n   * (Useful for form submission).\n   */\n  name?: string\n  /**\n   * The value to be used in the radio button.\n   * This is the value that will be returned on form submission.\n   */\n  value?: string | number\n  /**\n   * If `true`, the radio will be checked.\n   * You'll need to pass `onChange` to update its value (since it is now controlled)\n   */\n  isChecked?: boolean\n  /**\n   * If `true`, the radio will be initially checked.\n   */\n  defaultIsChecked?: boolean\n  /**\n   * If `true`, the radio will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and `isDisabled` is true, the radio will remain\n   * focusable but not interactive.\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the radio will be read-only\n   */\n  isReadOnly?: boolean\n  /**\n   * If `true`, the radio button will be invalid. This also sets `aria-invalid` to `true`.\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the radio button will be required. This also sets `aria-required` to `true`.\n   */\n  isRequired?: boolean\n  /**\n   * Function called when checked state of the `input` changes\n   */\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function useRadio(props: UseRadioProps = {}) {\n  const {\n    defaultIsChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onChange,\n    isInvalid,\n    name,\n    value,\n    id,\n    ...htmlProps\n  } = props\n\n  const [isFocused, setFocused] = useBoolean()\n  const [isHovered, setHovering] = useBoolean()\n  const [isActive, setActive] = useBoolean()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const [isCheckedState, setChecked] = useState(Boolean(defaultIsChecked))\n\n  const [isControlled, isChecked] = useControllableProp(\n    isCheckedProp,\n    isCheckedState,\n  )\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        setChecked(event.target.checked)\n      }\n\n      onChange?.(event)\n    },\n    [isControlled, isDisabled, isReadOnly, onChange],\n  )\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.on()\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.off()\n      }\n    },\n    [setActive],\n  )\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, setActive.on),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovering.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovering.off),\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      setActive.on,\n      setActive.off,\n      setHovering.on,\n      setHovering.off,\n    ],\n  )\n\n  const inputProps = useFormControl<HTMLInputElement>(props)\n\n  const getInputProps: PropGetter<HTMLInputElement> = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const ownProps = pick(inputProps, [\n        \"id\",\n        \"disabled\",\n        \"readOnly\",\n        \"required\",\n        \"aria-invalid\",\n        \"aria-required\",\n        \"aria-readonly\",\n        \"aria-describedby\",\n        \"onFocus\",\n        \"onBlur\",\n      ])\n\n      const trulyDisabled = ownProps.disabled && !isFocusable\n\n      return {\n        ...props,\n        ...ownProps,\n        ref: mergeRefs(forwardedRef, ref),\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(ownProps.onBlur, props.onBlur, setFocused.off),\n        onFocus: callAllHandlers(\n          ownProps.onFocus,\n          props.onFocus,\n          setFocused.on,\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      inputProps,\n      isFocusable,\n      name,\n      value,\n      handleChange,\n      setFocused.off,\n      setFocused.on,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n    ],\n  )\n\n  const getLabelProps: PropGetter = (props = {}, ref = null) => {\n    return {\n      ...props,\n      ref,\n      onMouseDown: callAllHandlers(props.onMouseDown, stop),\n      onTouchStart: callAllHandlers(props.onTouchStart, stop),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }\n  }\n\n  return {\n    state: {\n      isInvalid,\n      isFocused,\n      isChecked,\n      isActive,\n      isHovered,\n      isDisabled,\n      isReadOnly,\n      isRequired,\n    },\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stop(event: SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseRadioReturn = ReturnType<typeof useRadio>\n"],"file":"use-radio.js"}