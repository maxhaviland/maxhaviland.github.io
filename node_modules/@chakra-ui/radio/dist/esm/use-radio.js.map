{"version":3,"sources":["../../src/use-radio.ts"],"names":["useBoolean","useControllableProp","ariaAttr","callAllHandlers","dataAttr","mergeRefs","pick","visuallyHiddenStyle","useCallback","useRef","useState","useFormControl","useRadio","props","defaultIsChecked","isChecked","isCheckedProp","isFocusable","isDisabled","isReadOnly","isRequired","onChange","isInvalid","name","value","htmlProps","isFocused","setFocused","isHovered","setHovering","isActive","setActive","ref","isCheckedState","setChecked","Boolean","isControlled","handleChange","event","preventDefault","target","checked","onKeyDown","key","on","onKeyUp","off","getCheckboxProps","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","inputProps","getInputProps","forwardedRef","ownProps","trulyDisabled","disabled","type","onBlur","onFocus","style","getLabelProps","stop","onTouchStart","state","stopPropagation"],"mappings":"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","sourcesContent":["import { useBoolean, useControllableProp } from \"@chakra-ui/hooks\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  dataAttr,\n  mergeRefs,\n  pick,\n  PropGetter,\n} from \"@chakra-ui/utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport {\n  ChangeEvent,\n  SyntheticEvent,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\"\nimport { useFormControl } from \"@chakra-ui/form-control\"\n\n/**\n * @todo use the `useClickable` hook here\n * to manage the isFocusable & isDisabled props\n */\nexport interface UseRadioProps {\n  /**\n   * id assigned to input\n   */\n  id?: string\n  /**\n   * The name of the input field in a radio\n   * (Useful for form submission).\n   */\n  name?: string\n  /**\n   * The value to be used in the radio button.\n   * This is the value that will be returned on form submission.\n   */\n  value?: string | number\n  /**\n   * If `true`, the radio will be checked.\n   * You'll need to pass `onChange` to update its value (since it is now controlled)\n   */\n  isChecked?: boolean\n  /**\n   * If `true`, the radio will be initially checked.\n   */\n  defaultIsChecked?: boolean\n  /**\n   * If `true`, the radio will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and `isDisabled` is true, the radio will remain\n   * focusable but not interactive.\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the radio will be read-only\n   */\n  isReadOnly?: boolean\n  /**\n   * If `true`, the radio button will be invalid. This also sets `aria-invalid` to `true`.\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the radio button will be required. This also sets `aria-required` to `true`.\n   */\n  isRequired?: boolean\n  /**\n   * Function called when checked state of the `input` changes\n   */\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function useRadio(props: UseRadioProps = {}) {\n  const {\n    defaultIsChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onChange,\n    isInvalid,\n    name,\n    value,\n    id,\n    ...htmlProps\n  } = props\n\n  const [isFocused, setFocused] = useBoolean()\n  const [isHovered, setHovering] = useBoolean()\n  const [isActive, setActive] = useBoolean()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const [isCheckedState, setChecked] = useState(Boolean(defaultIsChecked))\n\n  const [isControlled, isChecked] = useControllableProp(\n    isCheckedProp,\n    isCheckedState,\n  )\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        setChecked(event.target.checked)\n      }\n\n      onChange?.(event)\n    },\n    [isControlled, isDisabled, isReadOnly, onChange],\n  )\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.on()\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.off()\n      }\n    },\n    [setActive],\n  )\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, setActive.on),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovering.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovering.off),\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      setActive.on,\n      setActive.off,\n      setHovering.on,\n      setHovering.off,\n    ],\n  )\n\n  const inputProps = useFormControl<HTMLInputElement>(props)\n\n  const getInputProps: PropGetter<HTMLInputElement> = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const ownProps = pick(inputProps, [\n        \"id\",\n        \"disabled\",\n        \"readOnly\",\n        \"required\",\n        \"aria-invalid\",\n        \"aria-required\",\n        \"aria-readonly\",\n        \"aria-describedby\",\n        \"onFocus\",\n        \"onBlur\",\n      ])\n\n      const trulyDisabled = ownProps.disabled && !isFocusable\n\n      return {\n        ...props,\n        ...ownProps,\n        ref: mergeRefs(forwardedRef, ref),\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(ownProps.onBlur, props.onBlur, setFocused.off),\n        onFocus: callAllHandlers(\n          ownProps.onFocus,\n          props.onFocus,\n          setFocused.on,\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      inputProps,\n      isFocusable,\n      name,\n      value,\n      handleChange,\n      setFocused.off,\n      setFocused.on,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n    ],\n  )\n\n  const getLabelProps: PropGetter = (props = {}, ref = null) => {\n    return {\n      ...props,\n      ref,\n      onMouseDown: callAllHandlers(props.onMouseDown, stop),\n      onTouchStart: callAllHandlers(props.onTouchStart, stop),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }\n  }\n\n  return {\n    state: {\n      isInvalid,\n      isFocused,\n      isChecked,\n      isActive,\n      isHovered,\n      isDisabled,\n      isReadOnly,\n      isRequired,\n    },\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stop(event: SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseRadioReturn = ReturnType<typeof useRadio>\n"],"file":"use-radio.js"}