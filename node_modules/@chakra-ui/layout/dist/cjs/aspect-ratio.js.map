{"version":3,"sources":["../../src/aspect-ratio.tsx"],"names":["AspectRatio","props","ref","ratio","children","className","rest","child","React","Children","only","_className","height","content","display","paddingBottom","r","overflow","position","top","right","bottom","left","justifyContent","alignItems","width","objectFit","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAMA;;AACA;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,WAAW,gBAAG,wBACzB,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AAAA,qBACyBD,KADzB,CACvBE,KADuB;AAAA,MACvBA,KADuB,6BACf,IAAI,CADW;AAAA,MACRC,QADQ,GACyBH,KADzB,CACRG,QADQ;AAAA,MACEC,SADF,GACyBJ,KADzB,CACEI,SADF;AAAA,MACgBC,IADhB,iCACyBL,KADzB,uCAG/B;;;AACA,MAAMM,KAAK,GAAGC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAAd;;AAEA,MAAMO,UAAU,GAAG,eAAG,qBAAH,EAA0BN,SAA1B,CAAnB;;AAEA,sBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,SAAS,EAAES,UAHb;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,OAAO,QAFA;AAGPC,MAAAA,OAAO,EAAE,OAHF;AAIPC,MAAAA,aAAa,EAAE,0BAAcZ,KAAd,EAAqB,UAACa,CAAD;AAAA,eAAW,IAAIA,CAAL,GAAU,GAApB;AAAA,OAArB;AAJR,KAJX;AAUE,IAAA,KAAK,EAAE;AACL,eAAS;AACPC,QAAAA,QAAQ,EAAE,QADH;AAEPC,QAAAA,QAAQ,EAAE,UAFH;AAGPC,QAAAA,GAAG,EAAE,GAHE;AAIPC,QAAAA,KAAK,EAAE,GAJA;AAKPC,QAAAA,MAAM,EAAE,GALD;AAMPC,QAAAA,IAAI,EAAE,GANC;AAOPR,QAAAA,OAAO,EAAE,MAPF;AAQPS,QAAAA,cAAc,EAAE,QART;AASPC,QAAAA,UAAU,EAAE,QATL;AAUPC,QAAAA,KAAK,EAAE,MAVA;AAWPb,QAAAA,MAAM,EAAE;AAXD,OADJ;AAcL,4BAAsB;AACpBc,QAAAA,SAAS,EAAE;AADS;AAdjB;AAVT,KA4BMpB,IA5BN,GA8BGC,KA9BH,CADF;AAkCD,CA3CwB,CAApB;;;AA8CP,IAAIoB,cAAJ,EAAa;AACX3B,EAAAA,WAAW,CAAC4B,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends HTMLChakraProps<\"div\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/components/aspect-ratio\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(\n  function AspectRatio(props, ref) {\n    const { ratio = 4 / 3, children, className, ...rest } = props\n\n    // enforce single child\n    const child = React.Children.only(children)\n\n    const _className = cx(\"chakra-aspect-ratio\", className)\n\n    return (\n      <chakra.div\n        ref={ref}\n        position=\"relative\"\n        className={_className}\n        _before={{\n          height: 0,\n          content: `\"\"`,\n          display: \"block\",\n          paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n        }}\n        __css={{\n          \"& > *\": {\n            overflow: \"hidden\",\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            left: \"0\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n          },\n          \"& > img, & > video\": {\n            objectFit: \"cover\",\n          },\n        }}\n        {...rest}\n      >\n        {child}\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\"\n}\n"],"file":"aspect-ratio.js"}