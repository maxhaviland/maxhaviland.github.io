{"version":3,"sources":["../../src/flex.tsx"],"names":["Flex","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAMA;;AACA;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,IAAI,gBAAG,wBAA6B,SAASA,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AAAA,MAEvEC,SAFuE,GAUrEF,KAVqE,CAEvEE,SAFuE;AAAA,MAGvEC,KAHuE,GAUrEH,KAVqE,CAGvEG,KAHuE;AAAA,MAIvEC,OAJuE,GAUrEJ,KAVqE,CAIvEI,OAJuE;AAAA,MAKvEC,IALuE,GAUrEL,KAVqE,CAKvEK,IALuE;AAAA,MAMvEC,KANuE,GAUrEN,KAVqE,CAMvEM,KANuE;AAAA,MAOvEC,IAPuE,GAUrEP,KAVqE,CAOvEO,IAPuE;AAAA,MAQvEC,MARuE,GAUrER,KAVqE,CAQvEQ,MARuE;AAAA,MASpEC,IAToE,iCAUrET,KAVqE;;AAYzE,MAAMU,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAEV,SAFF;AAGbW,IAAAA,UAAU,EAAEV,KAHC;AAIbW,IAAAA,cAAc,EAAEV,OAJH;AAKbW,IAAAA,QAAQ,EAAEV,IALG;AAMbW,IAAAA,SAAS,EAAEV,KANE;AAObW,IAAAA,QAAQ,EAAEV,IAPG;AAQbW,IAAAA,UAAU,EAAEV;AARC,GAAf;AAWA,sBAAO,oBAAC,cAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAEP,GAAjB;AAAsB,IAAA,KAAK,EAAES;AAA7B,KAAyCD,IAAzC,EAAP;AACD,CAxBmB,CAAb;;;AA0BP,IAAIU,cAAJ,EAAa;AACXpB,EAAAA,IAAI,CAACqB,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/components/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\"\n}\n"],"file":"flex.js"}