{"version":3,"sources":["../../src/image.tsx"],"names":["chakra","forwardRef","omit","__DEV__","React","useImage","NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","Image","fallbackSrc","fallback","src","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","status","shared","objectFit","objectPosition","Img","displayName"],"mappings":";;;;AAAA,SACEA,MADF,EAIEC,UAJF,QAMO,mBANP;AAOA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAwC,aAAxC;AAeA,IAAMC,WAAW,gBAAGF,KAAK,CAACH,UAAN,CAAiB,SAASK,WAAT,CACnCC,KADmC,EAEnCC,GAFmC,EAGnC;AACA,MAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAA0CJ,KAAhD;AAAA,MAAuCK,IAAvC,iCAAgDL,KAAhD;;AACA,sBACE;AAAK,IAAA,KAAK,EAAEE,SAAZ;AAAuB,IAAA,MAAM,EAAEC,UAA/B;AAA2C,IAAA,GAAG,EAAEF,GAAhD;AAAqD,IAAA,GAAG,EAAEG;AAA1D,KAAmEC,IAAnE,EADF;AAGD,CARmB,CAApB;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,KAAK,gBAAGZ,UAAU,CAAoB,SAASY,KAAT,CAAeN,KAAf,EAAsBC,GAAtB,EAA2B;AAC5E,MAAM;AACJM,IAAAA,WADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,GALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA;AARI,MAUFd,KAVJ;AAAA,MASKK,IATL,iCAUIL,KAVJ;AAYA;AACF;AACA;AACA;;;AACE,MAAMe,YAAY,GAAGH,OAAO,IAAI,IAAX,IAAmBC,cAAxC;AAEA,MAAMG,MAAM,GAAGlB,QAAQ,cAClBE,KADkB;AAErBa,IAAAA,cAAc,EAAEE;AAFK,KAAvB;;AAKA,MAAME,MAAM;AACVhB,IAAAA,GADU;AAEViB,IAAAA,SAAS,EAAEP,GAFD;AAGVQ,IAAAA,cAAc,EAAET;AAHN,KAINK,YAAY,GAAGV,IAAH,GAAUV,IAAI,CAACU,IAAD,EAAO,CAAC,SAAD,EAAY,QAAZ,CAAP,CAJpB,CAAZ;;AAOA,MAAIW,MAAM,KAAK,QAAf,EAAyB;AACvB;AACJ;AACA;AACA;AACI,QAAIR,QAAJ,EAAc,OAAOA,QAAP;AAEd,wBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,MAAA,EAAE,EAAET,WADN;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,GAAG,EAAEQ;AAHP,OAIMU,MAJN,EADF;AAQD;;AAED,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,EAAE,EAAElB,WADN;AAEE,IAAA,GAAG,EAAEU,GAFP;AAGE,IAAA,WAAW,EAAEK,WAHf;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,SAAS,EAAC;AALZ,KAMMK,MANN,EADF;AAUD,CA1D8B,CAAxB;;AA8DP;AACA;AACA;AACA;AACA,OAAO,IAAMG,GAAG,gBAAG1B,UAAU,CAAkB,SAAS0B,GAAT,CAAapB,KAAb,EAAoBC,GAApB,EAAyB;AACtE,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,EAAE,EAAEF,WAFN;AAGE,IAAA,SAAS,EAAC;AAHZ,KAIMC,KAJN,EADF;AAQD,CAT4B,CAAtB;;AAWP,IAAIJ,OAAJ,EAAa;AACXU,EAAAA,KAAK,CAACe,WAAN,GAAoB,OAApB;AACD","sourcesContent":["import {\n  chakra,\n  PropsOf,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useImage, UseImageProps } from \"./use-image\"\n\ninterface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nconst NativeImage = React.forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note ðŸš¨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   */\n  ignoreFallback?: boolean\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/components/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = props\n\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n  const shouldIgnore = loading != null || ignoreFallback\n\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnore,\n  })\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nexport interface ImgProps extends HTMLChakraProps<\"img\">, NativeImageOptions {}\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nexport const Img = forwardRef<ImgProps, \"img\">(function Img(props, ref) {\n  return (\n    <chakra.img\n      ref={ref}\n      as={NativeImage}\n      className=\"chakra-image\"\n      {...props}\n    />\n  )\n})\n\nif (__DEV__) {\n  Image.displayName = \"Image\"\n}\n"],"file":"image.js"}