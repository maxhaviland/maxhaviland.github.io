{"version":3,"sources":["../../src/textarea.tsx"],"names":["Textarea","props","ref","styles","className","rows","rest","textareaProps","omitted","textareaStyles","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AASA;;AACA;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACO,IAAMA,QAAQ,gBAAG,wBAAsC,SAASA,QAAT,CAC5DC,KAD4D,EAE5DC,GAF4D,EAG5D;AACA,MAAMC,MAAM,GAAG,4BAAe,UAAf,EAA2BF,KAA3B,CAAf;;AADA,0BAEqC,8BAAiBA,KAAjB,CAFrC;AAAA,MAEQG,SAFR,qBAEQA,SAFR;AAAA,MAEmBC,IAFnB,qBAEmBA,IAFnB;AAAA,MAE4BC,IAF5B;;AAIA,MAAMC,aAAa,GAAG,iCAAoCD,IAApC,CAAtB;AAEA,MAAME,OAAO,GAAG,CACd,GADc,EAEd,MAFc,EAGd,QAHc,EAId,WAJc,CAAhB;AAOA,MAAMC,cAAc,GAAGJ,IAAI,GAAG,iBAAKF,MAAL,EAAaK,OAAb,CAAH,GAA2BL,MAAtD;AAEA,sBACE,oBAAC,cAAD,CAAQ,QAAR;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,IAAI,EAAEG;AAFR,KAGME,aAHN;AAIE,IAAA,SAAS,EAAE,eAAG,iBAAH,EAAsBH,SAAtB,CAJb;AAKE,IAAA,KAAK,EAAEK;AALT,KADF;AASD,CA3BuB,CAAjB;;;AA6BP,IAAIC,cAAJ,EAAa;AACXV,EAAAA,QAAQ,CAACW,WAAT,GAAuB,UAAvB;AACD","sourcesContent":["import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface TextareaOptions {\n  /**\n   * The border color when the textarea is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the textarea is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * If `true`, the textarea element will span the full width of its parent\n   */\n  isFullWidth?: boolean\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\"\nexport interface TextareaProps\n  extends Omit<HTMLChakraProps<\"textarea\">, Omitted>,\n    TextareaOptions,\n    FormControlOptions,\n    ThemingProps {}\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/components/textarea\n */\nexport const Textarea = forwardRef<TextareaProps, \"textarea\">(function Textarea(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Textarea\", props)\n  const { className, rows, ...rest } = omitThemingProps(props)\n\n  const textareaProps = useFormControl<HTMLTextAreaElement>(rest)\n\n  const omitted = [\n    \"h\",\n    \"minH\",\n    \"height\",\n    \"minHeight\",\n  ] as (keyof SystemStyleObject)[]\n\n  const textareaStyles = rows ? omit(styles, omitted) : styles\n\n  return (\n    <chakra.textarea\n      ref={ref}\n      rows={rows}\n      {...textareaProps}\n      className={cx(\"chakra-textarea\", className)}\n      __css={textareaStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\"\n}\n"],"file":"textarea.js"}