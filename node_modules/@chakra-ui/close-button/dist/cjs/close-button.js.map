{"version":3,"sources":["../../src/close-button.tsx"],"names":["CloseIcon","props","CloseButton","ref","styles","children","isDisabled","rest","baseStyle","outline","display","alignItems","justifyContent","flexShrink","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AASA;;AACA;;;;;;;;;;AAEA,IAAMA,SAA8B,GAAG,SAAjCA,SAAiC,CAACC,KAAD;AAAA,sBACrC,oBAAC,UAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB;AAAxB,KAAwCA,KAAxC,gBACE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,CAAC,EAAC;AAFJ,IADF,CADqC;AAAA,CAAvC;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,WAAW,gBAAG,wBACzB,SAASA,WAAT,CAAqBD,KAArB,EAA4BE,GAA5B,EAAiC;AAC/B,MAAMC,MAAM,GAAG,4BAAe,aAAf,EAA8BH,KAA9B,CAAf;;AAD+B,0BAEW,8BAAiBA,KAAjB,CAFX;AAAA,MAEvBI,QAFuB,qBAEvBA,QAFuB;AAAA,MAEbC,UAFa,qBAEbA,UAFa;AAAA,MAEEC,IAFF;;AAI/B,MAAMC,SAA4B,GAAG;AACnCC,IAAAA,OAAO,EAAE,CAD0B;AAEnCC,IAAAA,OAAO,EAAE,MAF0B;AAGnCC,IAAAA,UAAU,EAAE,QAHuB;AAInCC,IAAAA,cAAc,EAAE,QAJmB;AAKnCC,IAAAA,UAAU,EAAE;AALuB,GAArC;AAQA,sBACE,oBAAC,cAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,QADP;AAEE,kBAAW,OAFb;AAGE,IAAA,GAAG,EAAEV,GAHP;AAIE,IAAA,QAAQ,EAAEG,UAJZ;AAKE,IAAA,KAAK,eACAE,SADA,EAEAJ,MAFA;AALP,KASMG,IATN,GAWGF,QAAQ,iBAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAuB,IAAA,MAAM,EAAC;AAA9B,IAXf,CADF;AAeD,CA5BwB,CAApB;;;AA+BP,IAAIS,cAAJ,EAAa;AACXZ,EAAAA,WAAW,CAACa,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst CloseIcon: React.FC<IconProps> = (props) => (\n  <Icon focusable=\"false\" aria-hidden {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n    />\n  </Icon>\n)\n\nexport interface CloseButtonProps\n  extends HTMLChakraProps<\"button\">,\n    ThemingProps {\n  /**\n   * If `true`, the close button will be disabled.\n   */\n  isDisabled?: boolean\n}\n\n/**\n * A button with a close icon.\n *\n * It is used to handle the close functionality in feedback and overlay components\n * like Alerts, Toasts, Drawers and Modals.\n */\nexport const CloseButton = forwardRef<CloseButtonProps, \"button\">(\n  function CloseButton(props, ref) {\n    const styles = useStyleConfig(\"CloseButton\", props)\n    const { children, isDisabled, ...rest } = omitThemingProps(props)\n\n    const baseStyle: SystemStyleObject = {\n      outline: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexShrink: 0,\n    }\n\n    return (\n      <chakra.button\n        type=\"button\"\n        aria-label=\"Close\"\n        ref={ref}\n        disabled={isDisabled}\n        __css={{\n          ...baseStyle,\n          ...styles,\n        }}\n        {...rest}\n      >\n        {children || <CloseIcon width=\"1em\" height=\"1em\" />}\n      </chakra.button>\n    )\n  },\n)\n\nif (__DEV__) {\n  CloseButton.displayName = \"CloseButton\"\n}\n"],"file":"close-button.js"}