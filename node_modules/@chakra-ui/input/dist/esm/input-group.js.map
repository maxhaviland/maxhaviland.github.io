{"version":3,"sources":["../../src/input-group.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","cx","getValidChildren","__DEV__","React","InputGroup","props","ref","styles","children","className","rest","_className","stylesRef","useRef","validChildren","input","field","forEach","child","type","id","current","paddingLeft","height","h","paddingRight","borderRightRadius","borderLeftRadius","clones","map","pl","pr","theming","size","variant","cloneElement","width","display","position","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputGroupProps extends HTMLChakraProps<\"div\">, ThemingProps {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">(\n  function InputGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props)\n    const { children, className, ...rest } = omitThemingProps(props)\n\n    const _className = cx(\"chakra-input__group\", className)\n    const stylesRef = React.useRef<InputGroupProps>({})\n\n    const validChildren = getValidChildren(children)\n\n    const input: any = styles.field\n\n    validChildren.forEach((child: any) => {\n      if (!styles) return\n\n      if (input && child.type.id === \"InputLeftElement\") {\n        stylesRef.current.paddingLeft = input.height ?? input.h\n      }\n\n      if (input && child.type.id === \"InputRightElement\") {\n        stylesRef.current.paddingRight = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightAddon\") {\n        stylesRef.current.borderRightRadius = 0\n      }\n\n      if (child.type.id === \"InputLeftAddon\") {\n        stylesRef.current.borderLeftRadius = 0\n      }\n    })\n\n    const clones = validChildren.map((child: any) => {\n      const { pl, paddingLeft, pr, paddingRight } = child.props\n\n      /**\n       * Make it possible to override the size and variant from `Input`\n       */\n      const theming = {\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant,\n      }\n\n      return child.type.id !== \"Input\"\n        ? React.cloneElement(child, theming)\n        : React.cloneElement(child, {\n            ...theming,\n            paddingLeft: pl ?? paddingLeft ?? stylesRef.current?.paddingLeft,\n            paddingRight: pr ?? paddingRight ?? stylesRef.current?.paddingRight,\n            borderLeftRadius: stylesRef.current?.borderLeftRadius,\n            borderRightRadius: stylesRef.current?.borderRightRadius,\n          })\n    })\n\n    return (\n      <chakra.div\n        className={_className}\n        ref={ref}\n        __css={{\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n        }}\n        {...rest}\n      >\n        <StylesProvider value={styles}>{clones}</StylesProvider>\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  InputGroup.displayName = \"InputGroup\"\n}\n"],"file":"input-group.js"}