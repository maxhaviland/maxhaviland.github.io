{"version":3,"sources":["../../src/input-group.tsx"],"names":["InputGroup","props","ref","styles","children","className","rest","_className","stylesRef","React","useRef","validChildren","input","field","forEach","child","type","id","current","paddingLeft","height","h","paddingRight","borderRightRadius","borderLeftRadius","clones","map","pl","pr","theming","size","variant","cloneElement","width","display","position","__DEV__","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputGroupProps extends HTMLChakraProps<\"div\">, ThemingProps {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">(\n  function InputGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props)\n    const { children, className, ...rest } = omitThemingProps(props)\n\n    const _className = cx(\"chakra-input__group\", className)\n    const stylesRef = React.useRef<InputGroupProps>({})\n\n    const validChildren = getValidChildren(children)\n\n    const input: any = styles.field\n\n    validChildren.forEach((child: any) => {\n      if (!styles) return\n\n      if (input && child.type.id === \"InputLeftElement\") {\n        stylesRef.current.paddingLeft = input.height ?? input.h\n      }\n\n      if (input && child.type.id === \"InputRightElement\") {\n        stylesRef.current.paddingRight = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightAddon\") {\n        stylesRef.current.borderRightRadius = 0\n      }\n\n      if (child.type.id === \"InputLeftAddon\") {\n        stylesRef.current.borderLeftRadius = 0\n      }\n    })\n\n    const clones = validChildren.map((child: any) => {\n      const { pl, paddingLeft, pr, paddingRight } = child.props\n\n      /**\n       * Make it possible to override the size and variant from `Input`\n       */\n      const theming = {\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant,\n      }\n\n      return child.type.id !== \"Input\"\n        ? React.cloneElement(child, theming)\n        : React.cloneElement(child, {\n            ...theming,\n            paddingLeft: pl ?? paddingLeft ?? stylesRef.current?.paddingLeft,\n            paddingRight: pr ?? paddingRight ?? stylesRef.current?.paddingRight,\n            borderLeftRadius: stylesRef.current?.borderLeftRadius,\n            borderRightRadius: stylesRef.current?.borderRightRadius,\n          })\n    })\n\n    return (\n      <chakra.div\n        className={_className}\n        ref={ref}\n        __css={{\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n        }}\n        {...rest}\n      >\n        <StylesProvider value={styles}>{clones}</StylesProvider>\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  InputGroup.displayName = \"InputGroup\"\n}\n"],"file":"input-group.js"}