{"version":3,"sources":["../../src/input-addon.tsx"],"names":["placements","left","marginRight","borderRightRadius","borderRightColor","right","marginLeft","borderLeftRadius","borderLeftColor","StyledAddon","baseStyle","flex","width","display","alignItems","whiteSpace","InputAddon","props","ref","placement","rest","placementStyles","styles","addon","__DEV__","displayName","InputLeftAddon","className","id","InputRightAddon"],"mappings":";;;;;AAAA;;AAMA;;AACA;;;;;;;;;;AAIA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,MADT;AAEJC,IAAAA,iBAAiB,EAAE,CAFf;AAGJC,IAAAA,gBAAgB,EAAE;AAHd,GADW;AAMjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,gBAAgB,EAAE,CAFb;AAGLC,IAAAA,eAAe,EAAE;AAHZ;AANU,CAAnB;AAaA,IAAMC,WAAW,GAAG,oBAAO,KAAP,EAAc;AAChCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,UADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,UAAU,EAAE;AALH;AADqB,CAAd,CAApB;;AAcA;AACA;AACA;AACA;AACA;AACO,IAAMC,UAAU,gBAAG,wBACxB,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAAA;;AAAA,yBACUD,KADV,CACtBE,SADsB;AAAA,MACtBA,SADsB,iCACV,MADU;AAAA,MACCC,IADD,iCACUH,KADV;;AAE9B,MAAMI,eAAe,4BAAGrB,UAAU,CAACmB,SAAD,CAAb,oCAA4B,EAAjD;AACA,MAAMG,MAAM,GAAG,wBAAf;AAEA,sBACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEJ;AADP,KAEME,IAFN;AAGE,IAAA,KAAK,eACAE,MAAM,CAACC,KADP,EAEAF,eAFA;AAHP,KADF;AAUD,CAhBuB,CAAnB;;;AAmBP,IAAIG,cAAJ,EAAa;AACXR,EAAAA,UAAU,CAACS,WAAX,GAAyB,YAAzB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,IAAMC,cAAc,gBAAG,wBAC5B,SAASA,cAAT,CAAwBT,KAAxB,EAA+BC,GAA/B,EAAoC;AAClC,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAC;AAFZ,KAGMD,KAHN;AAIE,IAAA,SAAS,EAAE,eAAG,0BAAH,EAA+BA,KAAK,CAACU,SAArC;AAJb,KADF;AAQD,CAV2B,CAAvB;;;AAaP,IAAIH,cAAJ,EAAa;AACXE,EAAAA,cAAc,CAACD,WAAf,GAA6B,gBAA7B;AACD,C,CAED;;;AACAC,cAAc,CAACE,EAAf,GAAoB,gBAApB;AAEA;AACA;AACA;AACA;AACA;;AACO,IAAMC,eAAe,gBAAG,wBAC7B,SAASA,eAAT,CAAyBZ,KAAzB,EAAgCC,GAAhC,EAAqC;AACnC,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAC;AAFZ,KAGMD,KAHN;AAIE,IAAA,SAAS,EAAE,eAAG,2BAAH,EAAgCA,KAAK,CAACU,SAAtC;AAJb,KADF;AAQD,CAV4B,CAAxB;;;AAaP,IAAIH,cAAJ,EAAa;AACXK,EAAAA,eAAe,CAACJ,WAAhB,GAA8B,iBAA9B;AACD,C,CAED;;;AACAI,eAAe,CAACD,EAAhB,GAAqB,iBAArB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ntype Placement = \"left\" | \"right\"\n\nconst placements = {\n  left: {\n    marginRight: \"-1px\",\n    borderRightRadius: 0,\n    borderRightColor: \"transparent\",\n  },\n  right: {\n    marginLeft: \"-1px\",\n    borderLeftRadius: 0,\n    borderLeftColor: \"transparent\",\n  },\n}\n\nconst StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n  },\n})\n\nexport interface InputAddonProps extends HTMLChakraProps<\"div\"> {\n  placement?: Placement\n}\n\n/**\n * InputAddon\n *\n * Element to append or prepend to an input\n */\nexport const InputAddon = forwardRef<InputAddonProps, \"div\">(\n  function InputAddon(props, ref) {\n    const { placement = \"left\", ...rest } = props\n    const placementStyles = placements[placement] ?? {}\n    const styles = useStyles()\n\n    return (\n      <StyledAddon\n        ref={ref}\n        {...rest}\n        __css={{\n          ...styles.addon,\n          ...placementStyles,\n        }}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  InputAddon.displayName = \"InputAddon\"\n}\n\n/**\n * InputLeftAddon\n *\n * Element to append to the left of an input\n */\nexport const InputLeftAddon = forwardRef<InputAddonProps, \"div\">(\n  function InputLeftAddon(props, ref) {\n    return (\n      <InputAddon\n        ref={ref}\n        placement=\"left\"\n        {...props}\n        className={cx(\"chakra-input__left-addon\", props.className)}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  InputLeftAddon.displayName = \"InputLeftAddon\"\n}\n\n// This is used in `input-group.tsx`\nInputLeftAddon.id = \"InputLeftAddon\"\n\n/**\n * InputRightAddon\n *\n * Element to append to the right of an input\n */\nexport const InputRightAddon = forwardRef<InputAddonProps, \"div\">(\n  function InputRightAddon(props, ref) {\n    return (\n      <InputAddon\n        ref={ref}\n        placement=\"right\"\n        {...props}\n        className={cx(\"chakra-input__right-addon\", props.className)}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  InputRightAddon.displayName = \"InputRightAddon\"\n}\n\n// This is used in `input-group.tsx`\nInputRightAddon.id = \"InputRightAddon\"\n"],"file":"input-addon.js"}